import $ from 'jquery';
import { useEffect, useState } from 'react';

const AnimatedLogo = () => {
    const [isClient, setIsClient] = useState(false)

    if (typeof document !== 'undefined' && isClient) {
        $(function () {
            const start = $('#start')?.offset()?.top
            const end = $('#end')?.offset()?.top

            if (start && end) $('#animatedLogo').height(end - start)

            $(window).on('scroll', function () {
                drawLine(document.getElementById('path'));

                positionTail();
            });

            // init the line length
            drawLine(document.getElementById('path'));

            positionTail();


            //draw the line
            function drawLine(line: any) {
                if (typeof document !== 'undefined' && typeof window !== 'undefined') {
                    var docHeight = $(document).height() || 0
                    var windowHeight = $(window).height() || 0
                    var windowScroll = $(window)?.scrollTop() || 0
                    var pathLength = line.getTotalLength(),
                        maxScrollTop = docHeight - windowHeight,
                        percentDone = windowScroll / maxScrollTop,
                        length = percentDone * pathLength;
                    line.style.strokeDasharray = [length, pathLength].join(' ');
                    line.style.stroke="#974DF7"
                }
            }

            function positionTail() {
                var scrollY = window.scrollY;
                var maxScrollY = document.documentElement.scrollHeight - window.innerHeight;
                var getPathById = document.getElementById("path") as any
                var path: SVGGeometryElement = getPathById;
                // Calculate distance along the path the car should be for the current scroll amount
                var pathLen = path?.getTotalLength();
                var dist = pathLen * scrollY / maxScrollY;
                if (dist > pathLen) dist = pathLen;
                if (isFinite(parseFloat(dist.toString()))) {
                    var pos = path?.getPointAtLength(dist);

                    // Calculate position a little ahead of the car (or behind if we are at the end), so we can calculate car angle
                    if (dist + 1 <= pathLen) {
                        var posAhead = path?.getPointAtLength(dist + 1);
                        var angle = Math.atan2(posAhead.y - pos.y, posAhead.x - pos.x);

                    } else {
                        var posBehind = path?.getPointAtLength(dist - 1);
                        var angle = Math.atan2(pos.y - posBehind.y, pos.x - posBehind.x);
                    }
                    // Position the car at "pos" totated by "angle"
                    var tail = document.getElementById("tail");
                    tail?.setAttribute("transform", "translate(" + (pos.x) + "," + (pos.y) + ") rotate(" + (rad2deg(angle)) + ")");
                }

            }

            function rad2deg(rad: number) {
                return 180 * rad / Math.PI;
            }

        });
    }

    useEffect(() => {
        setIsClient(true)
    }, [])

    return (
        <>
            <div className='absolute xl:flex justify-center top-[20vh] right-0 w-full h-auto -z-10 hidden' id="route">
                {typeof document !== 'undefined' && isClient &&
                    <svg id='animatedLogo' xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1291 3400" fill="none">
                        <path d="M525.582 81.3606C525.422 80.3906 525.342 79.3406 525.342 78.2106V26.3506H511.602V79.3106C511.602 82.8206 512.172 86.0406 513.252 88.8806C520.782 85.6506 524.142 83.1906 525.582 81.3606Z" fill="#974DF7" />
                        <path d="M541.302 89.9004C537.672 94.4604 532.012 97.8804 526.512 101.18C528.412 101.71 530.472 101.99 532.652 101.99C542.352 101.99 546.722 97.7304 548.462 94.0304H550.422V101.11H574.522V89.4704H563.942V58.4004H550.202V74.5104C550.202 82.5904 547.022 87.9804 541.402 89.7704C541.372 89.8104 541.332 89.8604 541.302 89.9004Z" fill="#974DF7" />
                        <path d="M442.203 51.8312V61.4312H427.812V52.2712C427.812 32.6412 440.023 21.7412 459.213 21.7412C478.403 21.7412 490.612 32.6412 490.612 52.2712V66.4163C495.231 63.7797 501.746 61.5769 508.603 60.5811V73.3111C499.533 75.451 490.882 80.8511 490.623 89.7011L490.612 89.6693V101.121H476.222V51.8312C476.222 41.3612 469.903 34.6012 459.213 34.6012C448.523 34.6012 442.203 41.3612 442.203 51.8312Z" fill="#974DF7" />
                        <path d="M578.91 26.3506H593.3V56.3106H621.65V26.3506H636.04V101.121H621.65V69.3906H593.3V101.121H578.91V26.3506Z" fill="#FFFDF8" />
                        <path d="M643.031 85.3115C643.031 74.1915 651.751 68.4115 663.971 68.4115H678.801V65.3615C678.801 60.3415 675.751 56.6415 668.771 56.6415C661.791 56.6415 658.851 60.1315 657.871 65.0415L645.221 60.7915C647.841 52.6115 654.931 45.5215 668.991 45.5215C683.051 45.5215 692.111 52.8315 692.111 66.3515V86.5215C692.111 88.7015 693.201 89.7915 695.161 89.7915H699.521V101.132H690.361C685.021 101.132 681.091 98.3015 681.091 93.9315V93.8215H679.021C678.041 96.5515 674.661 102.652 663.321 102.652C651.981 102.652 643.041 96.4415 643.041 85.3115H643.031ZM678.791 79.7515V78.6615H664.941C659.821 78.6615 656.761 80.9515 656.761 84.8715C656.761 88.7915 659.811 91.5215 665.701 91.5215C673.331 91.5215 678.781 86.9415 678.781 79.7415L678.791 79.7515Z" fill="#FFFDF8" />
                        <path d="M701.48 74.8408V73.3108C701.48 55.6508 713.8 45.5108 729.5 45.5108C745.2 45.5108 754.03 54.4508 756.32 66.4508L743.02 69.2808C742.15 62.7408 738.11 57.7208 729.83 57.7208C721.55 57.7208 715.22 63.2808 715.22 73.5308V74.6208C715.22 84.8708 721.54 90.4308 729.83 90.4308C738.12 90.4308 742.15 85.7408 743.35 78.7608L756.65 81.9208C753.82 93.5908 744.98 102.641 729.5 102.641C714.02 102.641 701.48 92.5008 701.48 74.8408Z" fill="#FFFDF8" />
                        <path d="M777.371 24.791V66.991H779.331L797.211 47.041H815.091L790.121 73.211L815.961 101.121H798.291L779.321 79.641H777.361V101.121H763.621V24.791H777.371Z" fill="#FFFDF8" />
                        <path d="M816.191 84.981L828.841 81.711C830.261 89.341 835.381 91.741 841.711 91.741C848.041 91.741 851.091 89.231 851.091 85.851C851.091 82.471 848.361 80.941 841.931 79.741L838.881 79.191C827.541 77.121 818.161 72.871 818.161 62.181C818.161 51.491 826.671 45.501 839.531 45.501C851.631 45.501 859.921 51.391 862.431 60.111L849.671 64.041C848.471 58.481 844.761 56.411 839.531 56.411C834.301 56.411 831.461 58.371 831.461 61.531C831.461 65.021 834.511 66.441 839.531 67.311L842.581 67.861C854.791 70.041 864.391 73.531 864.391 84.871C864.391 96.211 855.451 102.641 841.711 102.641C827.971 102.641 818.051 96.321 816.191 84.981Z" fill="#FFFDF8" />
                        <path d="M443.892 28.681C442.212 27.981 440.922 26.861 439.712 25.501C438.282 24.221 436.532 22.211 435.202 19.051C433.532 15.071 431.622 8.51098 434.332 0.290977V0.250977C434.332 0.250977 434.342 0.250977 434.332 0.270977C434.262 0.360977 434.002 0.700977 433.572 1.35098C432.442 3.02098 429.822 7.07098 428.462 11.761C425.102 23.341 427.742 30.761 434.262 38.381C434.962 39.201 435.772 40.001 436.742 40.791C436.762 40.771 436.762 40.761 436.782 40.741C436.792 40.791 436.782 40.851 436.782 40.851C437.942 41.211 439.102 40.601 440.282 39.591C440.952 39.011 441.642 38.501 442.492 37.641C442.492 37.621 442.512 37.611 442.512 37.611C442.872 37.201 443.242 36.741 443.582 36.301C444.382 35.261 445.042 34.281 445.532 33.471C447.582 30.111 446.702 29.681 446.532 29.441C445.562 29.231 444.662 29.011 443.882 28.681H443.892Z" fill="#974DF7" />
                        <path d="M473.731 28.681C475.411 27.981 476.701 26.861 477.911 25.501C479.341 24.221 481.091 22.211 482.421 19.051C484.091 15.071 486.001 8.50098 483.291 0.290977V0.250977C483.291 0.250977 483.271 0.250977 483.291 0.270977C483.361 0.360977 483.621 0.700977 484.051 1.35098C485.181 3.02098 487.801 7.07098 489.161 11.761C492.521 23.341 489.881 30.761 483.361 38.381C482.661 39.201 481.851 40.001 480.881 40.791C480.861 40.771 480.861 40.761 480.841 40.741C480.831 40.791 480.841 40.851 480.841 40.851C479.681 41.211 478.521 40.601 477.341 39.591C476.671 39.011 475.981 38.501 475.131 37.641C475.131 37.621 475.111 37.611 475.111 37.611C474.751 37.201 474.381 36.741 474.041 36.301C473.241 35.261 472.581 34.281 472.091 33.471C470.041 30.111 470.921 29.681 471.091 29.441C472.061 29.231 472.961 29.011 473.741 28.681H473.731Z" fill="#974DF7" />
                        <path d="M592.2 110.491C608.42 110.491 619.96 115.331 623.78 118.101L620.01 123.281C615.83 121.071 607.25 117.441 596.01 117.441C594.69 117.441 593.34 117.491 591.96 117.601C558.19 120.211 549.92 133.301 526.54 133.301C503.16 133.301 498.48 118.051 498 113.111C497.2 104.871 501.1 94.9405 513.25 89.6505C513.5 89.5405 513.75 89.4405 514.01 89.3305L514.67 89.0605C515.13 88.8705 515.57 88.6805 516.01 88.4905C521.98 85.9305 525.77 83.6705 528.06 81.5705C528.49 81.1805 528.86 80.8005 529.19 80.4205C529.64 79.8905 530 79.3805 530.28 78.8705C531.18 77.2505 531.26 75.7005 530.91 74.1305C530.75 73.4205 530.38 72.7805 529.86 72.2105V58.7605C534.98 60.5605 539.25 63.7905 541.71 68.9105C544.73 75.2005 543.93 80.0105 541.14 84.0105C540.73 84.6105 540.27 85.1905 539.76 85.7505C539.29 86.2905 538.79 86.8005 538.25 87.3105C534.5 90.8505 529.31 93.7705 524.47 96.7105C523.98 97.0105 523.49 97.3006 523.01 97.6006C522.52 97.9105 522.04 98.2107 521.56 98.5106C515.65 102.311 510.89 106.331 510.94 111.921C511.01 119.931 516.62 122.641 524.95 122.641C540.33 122.641 564.98 113.381 581.05 111.241C584.97 110.721 588.7 110.491 592.2 110.491Z" fill="#974DF7" />
                        <path id='path' d="M622 120.726C647.5 136.726 690.951 135.227 731.316 140.5C819.876 152.069 879.199 103.193 959.816 131C1092.38 176.726 1225.62 220.579 1241.92 353.17C1257.76 482.035 1113.73 572.824 1028.3 628.654C956.305 675.705 872.276 709.31 794.566 744.203C706.63 783.687 621.164 824.207 537.615 873.74C398.863 956 200.831 1062.87 171.815 1250.24C159.965 1326.75 184.66 1378.51 236.209 1430.86C307.395 1503.15 400.093 1558.69 490.143 1599.5C590.627 1645.04 685.293 1697.49 791.639 1726.15C883.555 1750.92 976.033 1765.12 1062.98 1806.97C1159.15 1853.26 1312.09 1968.2 1283.26 2104.64C1269.08 2171.76 1226.76 2216.7 1168.24 2243.55C1090.71 2279.11 1013.92 2312.29 933.064 2338.66C812.248 2378.07 688.007 2398.95 564.427 2425.18C446.571 2450.18 331.048 2481.65 216.848 2521.61C151.897 2544.34 60.4661 2565.46 17.19 2628.48C-7.78824 2664.86 6.55311 2714.96 28.4058 2762.87C56.5893 2824.67 162.312 2873.86 162.312 2873.86C162.312 2873.86 266.967 2938.78 327.85 2950.99C516.973 2988.92 711.415 2984.82 899.714 3029.06C954.959 3042.04 1228.78 3079.36 1175.32 3192.5C1137.7 3272.09 1048.22 3245.49 963.816 3270.5C909.191 3286.68 872.796 3279.59 822.316 3306C792.308 3321.7 751.816 3356.5 751.816 3356.5" strokeWidth="6.5" strokeLinecap="round" strokeLinejoin="round" />
                        <path id="tail"
                            d="M21.2404 2.99008C21.8797 3.5785 22.3112 3.99559 22.4342 4.11675C22.468 4.14182 22.4853 4.15407 22.4853 4.15407C21.9126 4.48763 21.2282 4.88839 20.4647 5.33314C14.4665 8.74848 3.58265 15.0474 -2.18986 18.3882L-2.85205 18.7715C-4.84004 19.9274 -6.07028 20.6304 -6.07028 20.6304C-4.68441 18.3688 -3.61493 16.1973 -2.77002 14.1241C-2.63328 13.7814 -2.52333 13.4701 -2.41448 13.1228C-1.47013 10.758 -0.908466 8.49351 -0.55633 6.36576C-0.5009 5.99505 -0.467566 5.62777 -0.426081 5.25471L-0.355404 -1.15157C-0.371335 -1.31203 -0.379114 -1.47829 -0.3974 -1.6248C-0.677117 -4.00267 -1.17252 -6.07991 -1.86734 -7.86813C-1.90192 -8.00305 -1.9539 -8.16242 -2.01638 -8.30205C-2.28221 -9.02103 -2.58064 -9.71684 -2.89664 -10.3511C-4.46105 -13.7419 -6.19267 -15.5904 -6.19267 -15.5904C-4.84167 -15.14 -3.45374 -14.5686 -2.02886 -13.8762C2.67209 -11.6481 7.63776 -8.1849 11.8738 -4.90229C16.0332 -1.67565 19.4793 1.35884 21.2125 2.98537L21.2404 2.99008Z"
                            fill="#974DF7" />
                    </svg>
                }
            </div>
        </>
    )
}

export default AnimatedLogo